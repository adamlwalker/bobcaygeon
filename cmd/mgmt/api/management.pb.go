// Code generated by protoc-gen-go. DO NOT EDIT.
// source: management.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	management.proto

It has these top-level messages:
	Speaker
	GetSpeakersResponse
	GetSpeakersRequest
	SetSpeakerDisplayNameRequest
	UpdateResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Speaker struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=displayName" json:"displayName,omitempty"`
}

func (m *Speaker) Reset()                    { *m = Speaker{} }
func (m *Speaker) String() string            { return proto.CompactTextString(m) }
func (*Speaker) ProtoMessage()               {}
func (*Speaker) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Speaker) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Speaker) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type GetSpeakersResponse struct {
	Speakers   []*Speaker `protobuf:"bytes,1,rep,name=speakers" json:"speakers,omitempty"`
	ReturnCode int32      `protobuf:"varint,2,opt,name=returnCode" json:"returnCode,omitempty"`
}

func (m *GetSpeakersResponse) Reset()                    { *m = GetSpeakersResponse{} }
func (m *GetSpeakersResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSpeakersResponse) ProtoMessage()               {}
func (*GetSpeakersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetSpeakersResponse) GetSpeakers() []*Speaker {
	if m != nil {
		return m.Speakers
	}
	return nil
}

func (m *GetSpeakersResponse) GetReturnCode() int32 {
	if m != nil {
		return m.ReturnCode
	}
	return 0
}

type GetSpeakersRequest struct {
	SpeakerId string `protobuf:"bytes,1,opt,name=speakerId" json:"speakerId,omitempty"`
}

func (m *GetSpeakersRequest) Reset()                    { *m = GetSpeakersRequest{} }
func (m *GetSpeakersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSpeakersRequest) ProtoMessage()               {}
func (*GetSpeakersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetSpeakersRequest) GetSpeakerId() string {
	if m != nil {
		return m.SpeakerId
	}
	return ""
}

type SetSpeakerDisplayNameRequest struct {
	SpeakerId   string `protobuf:"bytes,1,opt,name=speakerId" json:"speakerId,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=displayName" json:"displayName,omitempty"`
}

func (m *SetSpeakerDisplayNameRequest) Reset()                    { *m = SetSpeakerDisplayNameRequest{} }
func (m *SetSpeakerDisplayNameRequest) String() string            { return proto.CompactTextString(m) }
func (*SetSpeakerDisplayNameRequest) ProtoMessage()               {}
func (*SetSpeakerDisplayNameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SetSpeakerDisplayNameRequest) GetSpeakerId() string {
	if m != nil {
		return m.SpeakerId
	}
	return ""
}

func (m *SetSpeakerDisplayNameRequest) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type UpdateResponse struct {
	ResponseCode int32  `protobuf:"varint,1,opt,name=responseCode" json:"responseCode,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

func (m *UpdateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Speaker)(nil), "Speaker")
	proto.RegisterType((*GetSpeakersResponse)(nil), "GetSpeakersResponse")
	proto.RegisterType((*GetSpeakersRequest)(nil), "GetSpeakersRequest")
	proto.RegisterType((*SetSpeakerDisplayNameRequest)(nil), "SetSpeakerDisplayNameRequest")
	proto.RegisterType((*UpdateResponse)(nil), "UpdateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BobcaygeonManagement service

type BobcaygeonManagementClient interface {
	GetSpeakers(ctx context.Context, in *GetSpeakersRequest, opts ...grpc.CallOption) (*GetSpeakersResponse, error)
	SetDisplayNameForSpeaker(ctx context.Context, in *SetSpeakerDisplayNameRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
}

type bobcaygeonManagementClient struct {
	cc *grpc.ClientConn
}

func NewBobcaygeonManagementClient(cc *grpc.ClientConn) BobcaygeonManagementClient {
	return &bobcaygeonManagementClient{cc}
}

func (c *bobcaygeonManagementClient) GetSpeakers(ctx context.Context, in *GetSpeakersRequest, opts ...grpc.CallOption) (*GetSpeakersResponse, error) {
	out := new(GetSpeakersResponse)
	err := grpc.Invoke(ctx, "/BobcaygeonManagement/GetSpeakers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bobcaygeonManagementClient) SetDisplayNameForSpeaker(ctx context.Context, in *SetSpeakerDisplayNameRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := grpc.Invoke(ctx, "/BobcaygeonManagement/SetDisplayNameForSpeaker", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BobcaygeonManagement service

type BobcaygeonManagementServer interface {
	GetSpeakers(context.Context, *GetSpeakersRequest) (*GetSpeakersResponse, error)
	SetDisplayNameForSpeaker(context.Context, *SetSpeakerDisplayNameRequest) (*UpdateResponse, error)
}

func RegisterBobcaygeonManagementServer(s *grpc.Server, srv BobcaygeonManagementServer) {
	s.RegisterService(&_BobcaygeonManagement_serviceDesc, srv)
}

func _BobcaygeonManagement_GetSpeakers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpeakersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BobcaygeonManagementServer).GetSpeakers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BobcaygeonManagement/GetSpeakers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BobcaygeonManagementServer).GetSpeakers(ctx, req.(*GetSpeakersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BobcaygeonManagement_SetDisplayNameForSpeaker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSpeakerDisplayNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BobcaygeonManagementServer).SetDisplayNameForSpeaker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BobcaygeonManagement/SetDisplayNameForSpeaker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BobcaygeonManagementServer).SetDisplayNameForSpeaker(ctx, req.(*SetSpeakerDisplayNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BobcaygeonManagement_serviceDesc = grpc.ServiceDesc{
	ServiceName: "BobcaygeonManagement",
	HandlerType: (*BobcaygeonManagementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSpeakers",
			Handler:    _BobcaygeonManagement_GetSpeakers_Handler,
		},
		{
			MethodName: "SetDisplayNameForSpeaker",
			Handler:    _BobcaygeonManagement_SetDisplayNameForSpeaker_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "management.proto",
}

func init() { proto.RegisterFile("management.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0x9b, 0x94, 0xfe, 0xdb, 0x4e, 0xfe, 0x54, 0x99, 0xf6, 0x10, 0x4a, 0x95, 0xb0, 0x78,
	0xe8, 0x69, 0x0f, 0xf1, 0xa6, 0xb7, 0x2a, 0x8a, 0xa0, 0x3d, 0x24, 0x78, 0x51, 0x10, 0xb6, 0x66,
	0x08, 0x41, 0x93, 0x5d, 0x77, 0xb7, 0x87, 0x7e, 0x1b, 0x3f, 0xaa, 0x10, 0x93, 0x34, 0x41, 0x91,
	0xde, 0x76, 0xdf, 0xec, 0x3c, 0xe6, 0xf7, 0x66, 0xe1, 0x38, 0x17, 0x85, 0x48, 0x29, 0xa7, 0xc2,
	0x72, 0xa5, 0xa5, 0x95, 0xec, 0x12, 0x86, 0xb1, 0x22, 0xf1, 0x46, 0x1a, 0x27, 0xe0, 0x66, 0x89,
	0xef, 0x04, 0xce, 0x72, 0x1c, 0xb9, 0x59, 0x82, 0x01, 0x78, 0x49, 0x66, 0xd4, 0xbb, 0xd8, 0xad,
	0x45, 0x4e, 0xbe, 0x5b, 0x16, 0xda, 0x12, 0x7b, 0x86, 0xe9, 0x2d, 0xd9, 0xaa, 0xdf, 0x44, 0x64,
	0x94, 0x2c, 0x0c, 0xe1, 0x19, 0x8c, 0x4c, 0xa5, 0xf9, 0x4e, 0xd0, 0x5f, 0x7a, 0xe1, 0x88, 0x57,
	0x8f, 0xa2, 0xa6, 0x82, 0xa7, 0x00, 0x9a, 0xec, 0x56, 0x17, 0x57, 0x32, 0xf9, 0x76, 0x1f, 0x44,
	0x2d, 0x85, 0x85, 0x80, 0x1d, 0xf3, 0x8f, 0x2d, 0x19, 0x8b, 0x0b, 0x18, 0x57, 0x0e, 0x77, 0xf5,
	0xac, 0x7b, 0x81, 0xbd, 0xc0, 0x22, 0x6e, 0x7a, 0xae, 0xf7, 0x93, 0x1e, 0xd4, 0x7d, 0x00, 0xf0,
	0x1a, 0x26, 0x8f, 0x2a, 0x11, 0x96, 0x1a, 0x56, 0x06, 0xff, 0x75, 0x75, 0x2e, 0x39, 0x9c, 0x92,
	0xa3, 0xa3, 0xa1, 0x0f, 0xc3, 0x9c, 0x8c, 0x11, 0x69, 0xed, 0x59, 0x5f, 0xc3, 0x4f, 0x07, 0x66,
	0x2b, 0xb9, 0x79, 0x15, 0xbb, 0x94, 0x64, 0xf1, 0xd0, 0x2c, 0x07, 0x2f, 0xc0, 0x6b, 0xc1, 0xe3,
	0x94, 0xff, 0x8c, 0x62, 0x3e, 0xe3, 0xbf, 0x84, 0xcf, 0x7a, 0x78, 0x0f, 0x7e, 0x4c, 0xb6, 0x45,
	0x7f, 0x23, 0x75, 0xbd, 0xe3, 0x13, 0xfe, 0x57, 0x3e, 0xf3, 0x23, 0xde, 0xc5, 0x63, 0xbd, 0xd5,
	0xe0, 0xa9, 0x2f, 0x54, 0xb6, 0xf9, 0x57, 0x7e, 0x97, 0xf3, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x1c, 0x2b, 0x7b, 0xf2, 0x42, 0x02, 0x00, 0x00,
}
